{"version":3,"sources":["../src/example.ts"],"names":[],"mappings":"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","file":"example.js","sourcesContent":["import {Content, Input, Output, Parser, ParserBuilder} from \"parsque-api\";\r\nimport * as fs from \"fs\";\r\n\r\nconst FILES_PATH = \"./files/\";\r\nconst FILE_1_PATH = FILES_PATH + \"file_1.txt\";\r\nconst FILE_2_PATH = FILES_PATH + \"file_2.txt\";\r\nconst FILE_3_PATH = FILES_PATH + \"file_3.txt\";\r\n\r\nclass FileInput extends Input {\r\n    path: string;\r\n    file: FileInput;\r\n    files: FileInput[];\r\n}\r\n\r\nclass FileOutput extends Output {\r\n    line1: string;\r\n    line2: string;\r\n    line3: string;\r\n    file: FileOutput;\r\n    files: FileOutput[];\r\n}\r\n\r\nclass FileContent extends Content {\r\n    lines: string[];\r\n}\r\n\r\nclass FileParser extends Parser {\r\n    protected inputCreated(): void {\r\n        super.inputCreated();\r\n\r\n        let input = this.input as FileInput;\r\n\r\n        let childInput = new FileInput();\r\n        childInput.path = FILE_2_PATH;\r\n        input.file = childInput;\r\n\r\n        let childInputs: FileInput[] = [];\r\n\r\n        for (let path of [FILE_1_PATH, FILE_2_PATH, FILE_3_PATH]) {\r\n            let childInput = new FileInput();\r\n            childInput.path = path;\r\n            childInputs.push(childInput);\r\n        }\r\n\r\n        input.files = childInputs;\r\n    }\r\n\r\n    protected createOutput(): FileOutput {\r\n        return new FileOutput();\r\n    }\r\n\r\n    protected createContent(): FileContent {\r\n        let content = new FileContent();\r\n        content.lines = fs.readFileSync((this.input as FileInput).path, \"utf-8\").split(/\\s+/);\r\n\r\n        return content;\r\n    }\r\n\r\n    parseLine1(): void {\r\n        this.parseValue(\"line1\", parser => (this.content as FileContent).lines[0]);\r\n    }\r\n\r\n    parseLine2(): void {\r\n        this.parseValue(\"line2\", parser => (this.content as FileContent).lines[1]);\r\n    }\r\n\r\n    parseLine3(): void {\r\n        this.parseValue(\"line3\", parser => (this.content as FileContent).lines[2]);\r\n    }\r\n\r\n    parseFile(outputParser: (parser: FileParser) => void): void {\r\n        this.parseOutput(\"file\", () => new FileParser(), outputParser);\r\n    }\r\n\r\n    parseFiles(outputsParser: (parser: FileParser, index: number) => void, ...indexes: number[]): void {\r\n        this.parseOutputs(\"files\", () => new FileParser(), outputsParser, ...indexes);\r\n    }\r\n}\r\n\r\nlet parser = new ParserBuilder(() => new FileParser())\r\n    .withInputFactory(() => {\r\n        let input = new FileInput();\r\n        input.path = FILE_1_PATH;\r\n\r\n        return input;\r\n    })\r\n    .build() as FileParser;\r\nparser.parseLine1();\r\nparser.parseLine2();\r\nparser.parseLine3();\r\nparser.parseFile(childParser => {\r\n    childParser.parseLine1();\r\n    childParser.parseLine2();\r\n    childParser.parseLine3();\r\n});\r\nparser.parseFiles(childParser => {\r\n    childParser.parseLine1();\r\n    childParser.parseLine2();\r\n    childParser.parseLine3();\r\n}, 0, 2);\r\n\r\nconsole.log(JSON.stringify(parser.output, null, 2));\r\n"]}